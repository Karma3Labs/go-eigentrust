// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// Compute implements compute operation.
	//
	// Compute EigenTrust scores using the given inputs.
	// A compute request takes four inputs:
	// * Local trust matrix, in sparse form
	// * Pre-trust vector, in sparse form
	// * Pre-trust strength, a floating-point number between 0 and 1
	// * Error threshold, a floating-point number between 0 and 1
	// The local trust matrix is required; all others are optional.
	//
	// POST /compute
	Compute(ctx context.Context, req *ComputeRequestBody) (ComputeRes, error)
	// ComputeWithStats implements computeWithStats operation.
	//
	// Compute EigenTrust scores using the given inputs.
	// See /compute for details.
	// The only difference is that not just the EigenTrust scores but also
	// statistics and rankings are returned.
	//
	// POST /compute-with-stats
	ComputeWithStats(ctx context.Context, req *ComputeRequestBody) (ComputeWithStatsRes, error)
	// DeleteLocalTrust implements deleteLocalTrust operation.
	//
	// Delete local trust.
	//
	// DELETE /local-trust/{id}
	DeleteLocalTrust(ctx context.Context, params DeleteLocalTrustParams) (DeleteLocalTrustRes, error)
	// GetLocalTrust implements getLocalTrust operation.
	//
	// Return the given locally stored local trust as an inline ref.
	//
	// GET /local-trust/{id}
	GetLocalTrust(ctx context.Context, params GetLocalTrustParams) (GetLocalTrustRes, error)
	// GetStatus implements getStatus operation.
	//
	// Get the health check status.
	//
	// GET /status
	GetStatus(ctx context.Context) (GetStatusRes, error)
	// HeadLocalTrust implements headLocalTrust operation.
	//
	// Return 204 if the given local trust exists, 404 otherwise.
	//
	// HEAD /local-trust/{id}
	HeadLocalTrust(ctx context.Context, params HeadLocalTrustParams) (HeadLocalTrustRes, error)
	// UpdateLocalTrust implements updateLocalTrust operation.
	//
	// Load and locally cache the local trust
	// from the given local trust reference.
	//
	// PUT /local-trust/{id}
	UpdateLocalTrust(ctx context.Context, req *TrustRef, params UpdateLocalTrustParams) (UpdateLocalTrustRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
